#! /usr/bin/env python3
# -*- mode: python -*-

# dctest - Compile brainfuck code, decompile it, and run it to test it
# Copyright (C) 2014 Rhea Myers
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or 
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

from optparse import OptionParser
import sys

import dogecode.brainfuck, dogecode.translation

def getopts():
    usage = "usage: %prog [options] source_file"
    parser = OptionParser(usage=usage)
    parser.add_option("-n", "--nocomment",
                      action="store_false", dest="strip", default=True,
                      help="don't skip the first [] as a comment")
    opts, args = parser.parse_args()
    if(len(args) != 1):
        parser.error("must supply source_file")
    return opts, args

def main():
    (opts, args) = getopts()
    strip_comment = opts.strip
    source_filename = args[0]
    print("Reading source file {}".format(source_filename), file=sys.stderr)
    try:
        source_code = open(source_filename).read()
        print("OK", file=sys.stderr)
    except:
        print("Couldn't read file {}".format(source_filename), file=sys.stderr)
        sys.exit(2)
    tokens = dogecode.translation.source_to_tokens(source_code, strip_comment)
    decoded_code = dogecode.translation.token_runs_to_code(tokens)
    try:
        dogecode.brainfuck.evaluate(decoded_code)
    except Exception as e:
        print("Error.", file=sys.stderr)
        print("Decoded program was: {}".format(decoded_code), file=sys.stderr)
        print("Exception was: {}".format(e), file=sys.stderr)
    
if __name__ == "__main__":
    main()
